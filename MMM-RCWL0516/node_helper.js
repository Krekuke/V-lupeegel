const NodeHelper = require("node_helper");
const { spawn, exec } = require("child_process");

let timeoutHandle = null; // Taimeri viide hilisemaks t√ºhistamiseks

module.exports = NodeHelper.create({
    start: function () {
        console.log("‚úÖ Alustan MMM-RCWL0516 NodeHelperit");
        this.config = {}; // Konfiguratsiooni hoidmine
        this.runMotionSensor();
    },

    // K√§ivitab taustal liikumisanduri Python-skripti
    runMotionSensor: function () {
        const process = spawn("python3", [__dirname + "/rcwl-0516.py"]);

        // Kui skript saadab andmeid (liikumine / mitte-liikumine)
        process.stdout.on("data", (data) => {
            const message = data.toString().trim();

            if (message === "MOTION_DETECTED") {
                console.log("üö∂ Liikumine tuvastatud! Ekraan sisse.");
                this.toggleDisplay(true);

                // Kui eelmine taimer oli t√∂√∂s, t√ºhista see
                if (timeoutHandle) clearTimeout(timeoutHandle);

                // Sea uus taimer ekraani v√§ljal√ºlitamiseks
                const timeout = (this.config.displayTimeout || 30) * 1000;
                timeoutHandle = setTimeout(() => {
                    console.log("‚åõ Aeg l√§bi. Ekraan v√§lja.");
                    this.toggleDisplay(false);
                }, timeout);
            }
        });

        process.stderr.on("data", (data) => {
            console.error(`‚ùó Python viga: ${data}`);
        });

        process.on("close", (code) => {
            console.log(`‚ùå Python skript l√µpetas t√∂√∂. V√§ljumiskood: ${code}`);
        });
    },

    // Ekraani sisse/v√§lja l√ºlitamine vastava k√§suga
    toggleDisplay: function (powerOn) {
        const cmd = powerOn
            ? "wlr-randr --output HDMI-A-1 --on"
            : "wlr-randr --output HDMI-A-1 --off";

        exec(cmd, (error, stdout, stderr) => {
            console.log(`‚ö° K√§ivitan k√§su: ${cmd}`);
            if (error) {
                console.error(`‚ùó Exec viga: ${error.message}`);
                return;
            }
            if (stderr) {
                console.error(`‚ö†Ô∏è Exec stderr: ${stderr}`);
                return;
            }
            console.log(`‚úÖ Exec v√§ljund: ${stdout}`);
        });
    },

    // V√µtab vastu konfiguratsiooni peamoodulist
    socketNotificationReceived: function (notification, payload) {
        if (notification === "SET_CONFIG") {
            this.config = payload;
            console.log("üîß Konfiguratsioon saadud:", this.config);
        }
    }
});
